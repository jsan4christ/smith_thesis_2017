row.names(pathway_zscores.matrix)<-pathway_zscores$Canonical.Pathway
pathway_zscores.matrix<-pathway_zscores.matrix[rowSums(abs(pathway_zscores.matrix),na.rm = T)>0,colSums(abs(pathway_zscores.matrix),na.rm = T)>0]
pathway_zscores.melt<-melt(pathway_zscores,id.vars = "Canonical.Pathway")
row.names(pathway_zscores)<-pathway_zscores$Canonical.Pathway
pathway_zscores.matrix[is.na(pathway_zscores.matrix)]<-0
## Create a design table for the pathways
Pathways_design<-data.frame(comparison=names(data.frame(pathway_zscores.matrix)))
Pathways_design$comp<-sapply(strsplit(as.character(Pathways_design$comparison),"\\."),function(x) x[[1]])
Pathways_design$ExposureTime<-sapply(strsplit(as.character(Pathways_design$comparison),"\\."),function(x) x[[2]])
Pathways_design$L<-sapply(strsplit(Pathways_design$comp,split = "*"),function(x) paste0(x[[1]],x[[2]]))
Pathways_design$ref<-sapply(strsplit(Pathways_design$comp,split = "*"),function(x) paste0(x[[3]]))
row.names(Pathways_design)<-Pathways_design$comparison
## Map mapthway names to classifications
path_type_map<-read.csv(paste0(R_script_input_directory,"Pathway_classification.csv"),stringsAsFactors = F)
## Subset to look at only cell culture medium references
medium_comparisons<-names(data.frame(pathway_zscores.matrix))[grepl(names(data.frame(pathway_zscores.matrix)),pattern = "M")]
pathway_zscores.matrix.medium<-pathway_zscores.matrix[,names(data.frame(pathway_zscores.matrix)) %in% medium_comparisons]
## Summary table for pathway classification
summary_pathways<-cbind(data.frame(num_cycle.p=colSums(pathway_zscores.matrix.medium[row.names(data.frame(pathway_zscores.matrix.medium)) %in% path_type_map[path_type_map$class=="c","pathway"],]>2)),
data.frame(num_cycle.n=colSums(pathway_zscores.matrix.medium[row.names(data.frame(pathway_zscores.matrix.medium)) %in% path_type_map[path_type_map$class=="c","pathway"],]<(-2))),
data.frame(num_immune.p=colSums(pathway_zscores.matrix.medium[row.names(data.frame(pathway_zscores.matrix.medium)) %in% path_type_map[path_type_map$class=="i","pathway"],]>2)),
data.frame(num_immune.n=colSums(pathway_zscores.matrix.medium[row.names(data.frame(pathway_zscores.matrix.medium)) %in% path_type_map[path_type_map$class=="i","pathway"],]<(-2))),
data.frame(num_immune_pro.n=colSums(pathway_zscores.matrix.medium[row.names(data.frame(pathway_zscores.matrix.medium)) %in% path_type_map[path_type_map$X=="pro","pathway"],]<(-2))),
data.frame(num_immune_pro.p=colSums(pathway_zscores.matrix.medium[row.names(data.frame(pathway_zscores.matrix.medium)) %in% path_type_map[path_type_map$X=="pro","pathway"],]>2)))
summary_pathways$comparison<-row.names(summary_pathways)
summary_pathways<-merge(summary_pathways,Pathways_design)
## Write table summarizing the number of pathways above or below z score, grouped by pathway category
write.csv(summary_pathways,paste0(thesis_tables_directory,TABLE_TRL_SUMMARY_PATHWAYS),row.names=F,quote=F)
write.csv(pathway_zscores.matrix.medium,paste0(thesis_tables_directory,TABLE_TRL_PATHWAY_Z_SCORES),row.names=T,quote=F)
##Sort # of z>2 pathways by negative cycle, positive immune and negative immune
summary_pathways[order(summary_pathways$num_cycle.n,decreasing = T),]
summary_pathways[order(summary_pathways$num_immune.p,decreasing = T),]
summary_pathways[order(summary_pathways$num_immune.n,decreasing = T),]
## Use pathways that are expressed abs(z-score)>2 in 10% of comparisons
pathway_zscores.matrix.medium<-pathway_zscores.matrix.medium[(rowSums(abs(pathway_zscores.matrix.medium)>2))>=.1*ncol(pathway_zscores.matrix.medium),]
## Clean up some of the pathway names in pathway map
path_type_map[path_type_map$pathway=="NF-_B Signaling","pathway"]<-"NF-κB Signaling"
path_type_map[path_type_map$pathway=="PKC_ Signaling in T Lymphocytes","pathway"]<-"PKCθ Signaling in T Lymphocytes"
path_type_map[path_type_map$X=="pro","class"]<-"pro"
## Add in pathway classification based on mapping file
pathway_zscores.matrix.medium<-data.frame(pathway_zscores.matrix.medium)
pathway_zscores.matrix.medium$pathway<-row.names(pathway_zscores.matrix.medium)
pathway_zscores.matrix.medium<-merge(pathway_zscores.matrix.medium,path_type_map) ## maps classifications to pathway names
row.names(pathway_zscores.matrix.medium)<-pathway_zscores.matrix.medium$pathway
table(path_type_map[path_type_map$pathway %in% row.names(data.frame(pathway_zscores.matrix.medium)),"class"])
## Melt the pathway z-scores table
pathway_zscores.medium.melt<-melt(pathway_zscores.matrix.medium,id.vars = c("class","X","pathway"))
pathway_zscores.medium.melt<-dplyr::rename(pathway_zscores.medium.melt,"comparison"=variable)
pathway_zscores.medium.melt<-merge(pathway_zscores.medium.melt,Pathways_design)
## Ensure the exposure times and BCS are ordered
summary_pathways$ExposureTime<-as.numeric(summary_pathways$ExposureTime)
summary_pathways$ExposureTime<-factor(summary_pathways$ExposureTime,levels = c(4,13,22),ordered = T)
pathway_zscores.medium.melt$comp<-factor(pathway_zscores.medium.melt$comp,levels = c("LCM","LJM","LIM","GVM"),ordered = T)
pathway_zscores.medium.melt$ExposureTime<-factor(pathway_zscores.medium.melt$ExposureTime,levels = c("4","13","22"),ordered = T)
pathway_zscores.medium.melt$x<-paste(pathway_zscores.medium.melt$comp,pathway_zscores.medium.melt$pathway)
##Clean up the pathway names for better plotting
#pathway_zscores.medium.melt[pathway_zscores.medium.melt$pathway=="Role of IL-17F in Allergic Inflammatory Airway Diseases","pathway"]<-"IL-17F in Allgc. Inflam. Arwy Dis."
#pathway_zscores.medium.melt[pathway_zscores.medium.melt$pathway=="Role of Pattern Recognition Receptors in Recognition of Bacteria and Viruses","pathway"]<-"PRRs/ Bacteria and Viruses"
#pathway_zscores.medium.melt[pathway_zscores.medium.melt$pathway=="Production of Nitric Oxide and Reactive Oxygen Species in Macrophages","pathway"]<-"Production of NO and ROS in Macrophages"
#pathway_zscores.medium.melt[pathway_zscores.medium.melt$pathway=="PKCθ Signaling in T Lymphocytes","pathway"]<-"PKCθ Signaling"
#pathway_zscores.medium.melt[pathway_zscores.medium.melt$pathway=="PI3K Signaling in B Lymphocytes","pathway"]<-"PI3K Signaling"
##Subset z-scores table by cell cycle pathways
pathway_zscores.medium.melt.cycle<-dplyr::filter(pathway_zscores.medium.melt,class %in% c("c"))
unique(dplyr::select(pathway_zscores.medium.melt,c(class,pathway)))
paste0("Number of pathways belonging to each class:")
table(unique(dplyr::select(pathway_zscores.medium.melt,c(class,pathway))) %>% dplyr::select(class))
paste0(c("the remaining 5 pathways did not belong to either cell cycle or immunity:",str_c(unique(dplyr::select(pathway_zscores.medium.melt,c(class,pathway))) %>% dplyr::filter(class=="o") %>% dplyr::select(pathway),collapse = ", ")))
ggplot(pathway_zscores.medium.melt.immune)+geom_tile(aes(x=ExposureTime,y=pathway,fill=value))+
scale_fill_gradient2(high="red",mid="white",low="blue",
na.value="yellow", midpoint=0)+facet_wrap(~comp,nrow=1)+
#mBio+
theme_bw() + theme(text = element_text(colour = "black",size=12))
#theme(text = element_text(size=12),plot.margin = unit(c(0,30,0,30),units = "pt"))
dev.off()
cairo_ps(paste0(thesis_figures_directory,FIGURE_COMBINED_PATHWAYS_CYCLE,".eps"),width=10,height=8)
ggplot(pathway_zscores.medium.melt.cycle)+geom_tile(aes(x=ExposureTime,y=pathway,fill=value))+
scale_fill_gradient2(high="red",mid="white",low="blue",
na.value="yellow", midpoint=0)+facet_wrap(~comp,nrow=1)+
mBio+
theme(text = element_text(size=12),plot.margin = unit(c(0,30,0,0),units = "pt"))
dev.off()
## Pull out DE tables from each comparison within list, and write this table to file
edgeR_results<-data.frame(gene=row.names(exprs(TRL_counts_meta.qc)))
row.names(edgeR_results)<-edgeR_results$gene
num_de_genes<-data.frame(num_de_genes=sapply(desets,function(x) x[[1]]))
num_de_genes$comparison<-row.names(num_de_genes)
write.csv(num_de_genes[num_de_genes$comparison %in% medium_comparisons,],file=paste0(m=thesis_tables_directory,TABLE_TRL_NUMDEGENES))
##Exctract genes from the list
for(i in names(desets)){
#i<-"LCGV.4"
tmp.df<-data.frame(desets[[i]]$fulltable)
names(tmp.df)<-paste0(i,".",names(tmp.df))
tmp.df$gene<-row.names(desets[[i]]$fulltable)
edgeR_results<-join(edgeR_results,tmp.df,"gene")
}
hist(as.matrix(dplyr::select(edgeR_results,ends_with("logFC"))))
hist(as.matrix(dplyr::select(edgeR_results,ends_with("logCPM"))))
quantile(as.matrix(dplyr::select(edgeR_results,ends_with("logFC"))),probs = c(0.68,0.95))
edgeR_results[1:5,1:6]
row.names(edgeR_results)<-edgeR_results$gene
dplyr::select(edgeR_results[edgeR_results$gene %in% c("EGFR","EP300","HDAC4","CDKN1A"),],contains("M")) %>% dplyr::select(contains("PValue.adj"))
write.csv(edgeR_results,paste0(thesis_tables_directory,TABLE_EDGER_RESULTS),quote = F,row.names = F)
#write.table(edgeR_results,paste0(thesis_tables_directory,"TABLE_A11.txt"),quote = F,row.names = F,sep="\t")
#write.csv(dplyr::select(edgeR_results,c(gene,ends_with("logFC"),ends_with("PValue"))),paste0(root_directory,"edgeR_results_LCPval.csv"),quote = F,row.names = F)
## Clean up the table containg the DE expresison information
edgeR_results.melt<-melt(edgeR_results)
edgeR_results.melt$variable<-gsub(pattern = "PValue.adj",replacement = "Pvalue_adj",x = edgeR_results.melt$variable)
edgeR_results.melt<-separate(edgeR_results.melt,"variable",sep="\\.",into = c("comparison","ExposureTime","value_type"))
## Assign colors to BCS
color_map<-c("LCGV"=unname(subject_long_taxa_colors["Lactobacillus_crispatus"]),"LCM"=unname(subject_long_taxa_colors["Lactobacillus_crispatus"]),"LJGV"=unname(subject_long_taxa_colors["Lactobacillus_jensenii"]),"LJM"=unname(subject_long_taxa_colors["Lactobacillus_jensenii"]),"LIM"=unname(subject_long_taxa_colors["Lactobacillus_iners"]),"LIGV"=unname(subject_long_taxa_colors["Lactobacillus_iners"]),"GVM"=unname(subject_long_taxa_colors["Gardnerella_vaginalis"]))
## Use different line types for G. vaginalis and medium (if used)
line_map<-data.frame(comparison=names(color_map),line_type=c("solid","dashed","solid","dashed","dashed","solid","dashed"))
## Merge tables together to map DE results to plot annotations
edgeR_results_colors<-data.frame(comparison=names(color_map),colr=unname(color_map))
edgeR_results.melt<-merge(edgeR_results.melt,edgeR_results_colors)
edgeR_results.melt<-merge(edgeR_results.melt,line_map)
edgeR_results.melt<-merge(edgeR_results.melt,dplyr::select(Pathways_design,c(comp,L,ref)),all.x=T,by.x="comparison",by.y="comp")
edgeR_results.melt$ExposureTime<-as.numeric(edgeR_results.melt$ExposureTime)
## Format and plot the cell cycle pathway-related gene expression's logFC over the timecourse
cycle_genes<-c("HDAC4","EP300","CDKN1A","CDK4","CCND1","CCNE2","ESR1","EGFR") ## Select which cell cycle genes to plot
cycle_genes_expression<- dplyr::filter(edgeR_results.melt,gene %in% cycle_genes &  ref=="M" ) ## Only include the cell cycle genes and cell culture medium as the reference
cycle_genes_expression<-unique(cycle_genes_expression)
cycle_genes_expression<-spread(cycle_genes_expression,key = value_type,value = value) ## This will make the logFC, FDR, and other DE attributes into colums for easier plotting. The plot will use logFC and FDR information
cycle_genes_expression$gene<-factor(cycle_genes_expression$gene,levels = cycle_genes,ordered = T) ## Maintain order of genes- this follows logical order discussed in thesis.
cycle_genes_expression[cycle_genes_expression$Pvalue_adj<0.01,"DE.pval"]<-"*" ## Annotate which samples are DE by FDR
## Make plot
long_plot.cc<-ggplot(cycle_genes_expression)+geom_point(aes(x=as.numeric(ExposureTime),y=logFC,col=comparison),size=3)+
geom_line(aes(x=as.numeric(ExposureTime),y=logFC,col=comparison),size=2)+
facet_wrap(~gene,scales = "free_y",nrow =2)+theme_bw()+scale_color_manual(values = color_map)+
geom_hline(yintercept =0)+geom_hline(yintercept =c(-1,0,1),lty=2)+xlab("Exposure Time (hours)")+
geom_text(aes(x=as.numeric(ExposureTime),y=logFC,label=DE.pval),size=8)+
mBio+
ylab("log (Fold Change)")+scale_x_continuous(breaks=c(4,13,22))
plot(long_plot.cc)
cairo_ps(paste0(thesis_figures_directory,FIGURE_LONGITDUINAL_GENEEXP.cycle),width = 8,height = 6)
plot(long_plot.cc)
dev.off()
proliferation_sigtests
EdU_sigtest
rbind(data.frame(Figure=gsub(FIGURE_SCRATCH_QUANT,replacement = "",pattern = ".eps"),scratch_sigtest),data.frame(Figure=gsub(FIGURE_EDU_QUANT,replacement = "",pattern = ".eps"),EdU_sigtest))
PLOT_nyc_v_tsb
PLOT_EDU.BETA<-
ggplot(EdU.summary,
aes(x=ExposureTime,y=mean,col=BCS))+
theme_bw()+
theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16))+
geom_line(size=1.5,show.legend = F)+
geom_errorbar(aes(ymax=mean+sd,ymin=mean-sd),size=1,width=.5,show.legend = F)+
geom_point(size=6,show.legend = F)+
mBio+
ylab("Epithelial Cells Positive for EdU (%)")+
xlab("Exposure Time (hours)")+
scale_color_manual(values = color_scheme_BCS)+
scale_x_continuous(breaks=c(0.5,1,4,8,11,13,16,19,22),minor_breaks = NULL,limits=c(0,22.5))+
scale_y_continuous(limits=c(0,102))
plot(PLOT_EDU.BETA)
###FIXME this should now be set up closert to qPCR given it is a time course
## Breadcrumb:
# In_Vitro_Experiments.Rdata in PreparePipeline/Prepare_EdU_Scratch.Rmd
load(file=paste0(R_script_input_directory,"In_Vitro_Experiments.Rdata"))
## Melt scratch assay data for easier handling
scratch.m<-filter(in_vitro_experiments,Experiment=="Scratch" & Observation == "Proliferation" & !grepl(x = as.character(in_vitro_experiments$Treatment),pattern = "CONTROL_")) %>% dplyr::select(-c(Experiment,Coverslip))
## Re-name the melted data
names(scratch.m)<-c("Observation","BCS","ExposureTime","percent_cells","Field")
## //////////////
### Scratch Assay
## //////////////
#Factor BCS so that order is enforced
##FIXME some of this can be moved into the prepare script!
scratch.m$BCS<-factor(scratch.m$BCS,ordered = T,levels = c("L. crispatus","L. jensenii","L. iners","G. vaginalis","Cell Culture Medium"))
scratch_sigtest.all<-data.frame(temp<-"NA")
scratch.summary.all<-data.frame(temp<-"NA")
for(et in c("8hr","13hr","16hr","19hr")){
##FIXME this is sloppy
##Ignore sig tests for now since the plots are clearly sig... too many comparisons
## Create a significance testing data frame to hold results
setup_sigtest.data<-setup_sigtest(pval_threshold = pval_threshold,raw_data = dplyr::filter(scratch.m,ExposureTime==et),test_function = "t.test",Experiment = "Scratch")
scratch_sigtest<-setup_sigtest.data$sigtest
scratch_sigtest$ExposureTime<-et
scratch.summary<-setup_sigtest.data$summary_stats
scratch.summary$ExposureTime.n<-as.numeric(gsub(et,pattern = "hr",replacement = ""))
scratch_sigtest.all<-rbind.fill(scratch_sigtest,scratch_sigtest.all)
scratch.summary.all<-rbind.fill(scratch.summary,scratch.summary.all)
}
# ggplot(scratch.summary.all)+geom_line(aes(x=ExposureTime.n,y=mean,col=BCS),show.legend = F)+
#   geom_errorbar(aes(x=ExposureTime.n,ymin=mean-sd,ymax=mean+sd),width=.3,show.legend = F)+
#   mBio+
#   ylab("Filled Scratch Area (%)")+
#   xlab("Exposure Time (hours)")+
#   theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16),axis.text.x=element_text(face="italic",angle = 45,vjust = 1,hjust = 1))+
#   scale_y_continuous(limits=c(0,102))+
#   scale_colour_manual(values=color_scheme_BCS)
###### NEW
PLOT_SCRATCH.BETA<-
ggplot(scratch.summary.all,
aes(x=ExposureTime.n,y=mean,col=BCS))+
theme_bw()+
theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16))+
geom_line(size=1.5,show.legend = F)+
geom_errorbar(aes(ymax=mean+sd,ymin=mean-sd),size=1,width=.5,show.legend = F)+
geom_point(size=6,show.legend = F)+
ylab("Filled Scratch Area (%)")+
mBio+
xlab("Exposure Time (hours)")+
scale_color_manual(values = color_scheme_BCS)+
scale_x_continuous(breaks=c(0.5,1,4,8,11,13,16,19,22),minor_breaks = NULL)+
scale_y_continuous(limits=c(0,102))
######
#
#
# ## Create Barplots for scratch assay
#
# plot_scratch.prolif<-
#   ggplot(scratch.summary)+geom_bar(aes(x=as.factor(BCS),y=mean,fill=BCS,col=BCS),stat="identity",show.legend = F)+
#   geom_errorbar(aes(x=BCS,ymin=mean-sd,ymax=mean+sd),width=.3,show.legend = F)+
#   mBio+
#   ylab("Filled Scratch Area (%)")+
#   xlab("BCS")+
#   theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16),axis.text.x=element_text(face="italic",angle = 45,vjust = 1,hjust = 1))+
#   scale_fill_manual(values=color_scheme_BCS)+
#   scale_y_continuous(limits=c(0,102))+
#   scale_colour_manual(values=color_scheme_BCS)+
#   annotate("text",x=scratch_sigtest$midpoints,y=scratch_sigtest$y.sig,label=scratch_sigtest$sig,size=4)+
#   geom_segment(data=setup_sigtest.data$statbars,aes(x=x,xend=xend,y=y,yend=yend),size=1)+
#   geom_segment(data=setup_sigtest.data$statbars2,aes(x=x,xend=xend,y=y,yend=yend),size=1)
##Write plot
cairo_ps(paste0(thesis_figures_directory,FIGURE_SCRATCH_QUANT),width = 8,height = 5.5)
plot(PLOT_SCRATCH.BETA) #plot(plot_scratch.prolif)
dev.off()
## //////////////
### EdU Assay
## //////////////
##FIXME - standardize with scratch since they are basically the same plot template
## Melt EdU assay data for easier handling, clean up input
EdU.m<-filter(in_vitro_experiments,Experiment=="Scratch" & Observation == "EdU") %>% dplyr::select(-c(Experiment)) #melt(scratch)
EdU.m<-rename(EdU.m,BCS=Treatment)
#Factor BCS so that order is enforced
EdU.m$BCS<-factor(EdU.m$BCS,ordered = T,levels = c("L. crispatus","L. jensenii","L. iners","G. vaginalis","Cell Culture Medium"))
EdU.m$percent_cells<-EdU.m$percent_cells+abs(rnorm(nrow(EdU.m),1E-3,0.01))
statbars<-EdU_sigtest<-statbars2<-EdU.summary<-data.frame(temp="NA")
for(et in c("8hr","13hr","16hr","19hr")){
## Create a significance testing data frame to hold results
setup_sigtest.data<-setup_sigtest(pval_threshold = pval_threshold,raw_data = dplyr::filter(EdU.m,ExposureTime==et),test_function = "t.test",Experiment = "Scratch")
statbars<-rbind.fill(data.frame(setup_sigtest.data$statbars,ExposureTime=as.numeric(gsub(et,pattern = "hr",replacement = ""))),statbars)
statbars2<-rbind.fill(data.frame(setup_sigtest.data$statbars2,ExposureTime=as.numeric(gsub(et,pattern = "hr",replacement = ""))),statbars2)
EdU_sigtest<-rbind.fill(data.frame(setup_sigtest.data$sigtest,ExposureTime=as.numeric(gsub(et,pattern = "hr",replacement = ""))),EdU_sigtest)
EdU.summary<-rbind.fill(data.frame(setup_sigtest.data$summary_stats,ExposureTime=as.numeric(gsub(et,pattern = "hr",replacement = ""))),EdU.summary)
}
###New
PLOT_EDU.BETA<-
ggplot(EdU.summary,
aes(x=ExposureTime,y=mean,col=BCS))+
theme_bw()+
theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16))+
geom_line(size=1.5,show.legend = F)+
geom_errorbar(aes(ymax=mean+sd,ymin=mean-sd),size=1,width=.5,show.legend = F)+
geom_point(size=6,show.legend = F)+
mBio+
ylab("Epithelial Cells Positive for EdU (%)")+
xlab("Exposure Time (hours)")+
scale_color_manual(values = color_scheme_BCS)+
scale_x_continuous(breaks=c(0.5,1,4,8,11,13,16,19,22),minor_breaks = NULL,limits=c(0,22.5))+
scale_y_continuous(limits=c(0,102))
####New
#
#  ggplot(EdU.summary)+geom_line(aes(x=ExposureTime,y=mean,col=BCS), show.legend = F)+
#   geom_errorbar(aes(x=ExposureTime,ymin=mean-sd,ymax=mean+sd),show.legend = F,width=.3)+
#   mBio+
#   ylab("Epithelial Cells Positive for EdU (%)")+
#   xlab("BCS")+
#   theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16),axis.text.x=element_text(face="italic",angle = 45,vjust = 1,hjust = 1))+
#   scale_y_continuous(limits=c(0,102))#+
#   ####scale_colour_manual(values=color_scheme_BCS)+
#   ####annotate("text",x=EdU_sigtest$midpoints,y=EdU_sigtest$y.sig,label=EdU_sigtest$sig,size=4)+
#  #### geom_segment(data=statbars,aes(x=x,xend=xend,y=y,yend=yend),size=1)+
#   ####geom_segment(data=statbars2,aes(x=x,xend=xend,y=y,yend=yend),size=1)
#
## Create Barplots for EdU assay
#
# EdUPlot<-
#   ggplot(EdU.summary)+geom_bar(aes(x=factor(BCS),y=mean,fill=BCS,col=BCS),stat="identity", position="dodge",show.legend = F)+
#   geom_errorbar(aes(x=factor(BCS),ymin=mean-sd,ymax=mean+sd),position="dodge",show.legend = F,width=.3)+
#   mBio+
#   ylab("Epithelial Cells Positive for EdU (%)")+
#   xlab("BCS")+
#   theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16),axis.text.x=element_text(face="italic",angle = 45,vjust = 1,hjust = 1))+
#   scale_fill_manual(values=color_scheme_BCS)+
#   scale_y_continuous(limits=c(0,102))+
#   scale_colour_manual(values=color_scheme_BCS)+
#   annotate("text",x=EdU_sigtest$midpoints,y=EdU_sigtest$y.sig,label=EdU_sigtest$sig,size=4)+
#   geom_segment(data=statbars,aes(x=x,xend=xend,y=y,yend=yend),size=1)+
#   geom_segment(data=statbars2,aes(x=x,xend=xend,y=y,yend=yend),size=1)
##Write plot
cairo_ps(paste0(thesis_figures_directory,FIGURE_EDU_QUANT),width = 8,height = 5.5)
plot(PLOT_EDU.BETA)
dev.off()
## Scratch assay data for TSB and NYC media exposed cells
control_meds<-filter(in_vitro_experiments,grepl(x = as.character(in_vitro_experiments$Treatment),pattern = "CONTROL_"))
control_meds.nyc.mean<-mean(control_meds[control_meds$Treatment=="CONTROL_NYCmed_20pct","percent_cells"])
control_meds.tsb.mean<-mean(control_meds[control_meds$Treatment=="CONTROL_TSBmed_20pct","percent_cells"])
control_meds.nyc.sd<-sd(control_meds[control_meds$Treatment=="CONTROL_NYCmed_20pct","percent_cells"])
control_meds.tsb.sd<-sd(control_meds[control_meds$Treatment=="CONTROL_TSBmed_20pct","percent_cells"])
control_meds.sig<-t.test(x=filter(control_meds,Treatment=="CONTROL_NYCmed_20pct")[,"percent_cells"],y =filter(control_meds,Treatment=="CONTROL_TSBmed_20pct")[,"percent_cells"],paired = F)
paste0("Percent cell proliferation between 20% NYC-III and TSB bacterial culture media as evaluated by scratch assay was not significant (mean +/- standard deviation NYC-III cell proliferation=",control_meds.nyc.mean,"% +/- ",control_meds.nyc.sd,"%, mean +/- standard deviation TSB  cell proliferation=,",control_meds.tsb.mean,"% +/- ",control_meds.tsb.sd,"%, p=",control_meds.sig$p.value,")")
##FIXME no longer applicable with time course ddata
## Combine proliferation sig tests and write to file
##proliferation_sigtests<-rbind(data.frame(Figure=gsub(FIGURE_SCRATCH_QUANT,replacement = "",pattern = ".eps"),scratch_sigtest),data.frame(Figure=gsub(FIGURE_EDU_QUANT,replacement = "",pattern = ".eps"),EdU_sigtest))
###proliferation_sigtests<-proliferation_sigtests[with(proliferation_sigtests, order(Figure, x,xend)),]
###proliferation_sigtests<-dplyr::select(proliferation_sigtests,Figure,xref,reference,pval,mean_diff,sig)
###proliferation_sigtests<-rbind(proliferation_sigtests,data.frame(Figure="FIGURE_S5",xref="TSB",reference="NYC",pval=control_meds.sig$p.value,mean_diff=unname(control_meds.sig$estimate[2]-control_meds.sig$estimate[1]),sig=ifelse(control_meds.sig$p.value<pval_threshold,"*","N.S.")))
PLOT_nyc_v_tsb<-ggplot(data.frame(media=c("NYC (Lactobacillus spp.)","TSB (G. vaginalis)"),scratch.mean=c(control_meds.nyc.mean,control_meds.tsb.mean),scratch.sd=c(control_meds.nyc.sd,control_meds.tsb.sd)))+
geom_bar(aes(x=media,y=scratch.mean,fill=media),stat="identity",show.legend =F)+
geom_errorbar(aes(x=media,ymax=scratch.mean+scratch.sd,ymin=scratch.mean-scratch.sd),width=.2)+
mBio+ylab("Percent Scratch Area Filled")+
xlab("VK2 Cell Culture Medium + 20% Bacterial Culture Medium")+
scale_y_continuous(limits=c(0,100))+
annotate("text",x=1.5,y=90,label="N.S.",size=4)+
geom_segment(data=data.frame(x=1,xend=2,y=87,yend=87),aes(x=x,xend=xend,y=y,yend=yend),size=1)+
geom_segment(data=data.frame(x=c(1,2),xend=c(1,2),y=c(85,85),yend=c(87,87)),aes(x=x,xend=xend,y=y,yend=yend),size=1)
cairo_ps(file=paste0(thesis_figures_directory,FIGURE_nyc_v_tsb),width = 8,height = 5.5)
PLOT_nyc_v_tsb
dev.off()
###write.csv(proliferation_sigtests,file=paste0(thesis_tables_directory,TABLE_EDU_SCRATCH_QUANT),row.names = F)
## PErcent proliferation in 1% DL lactic acid, ph buffered 7.66 expoed cells
DL_PH766_percent_proliferation<-data.frame(DL_1pct_766=c(
7.706708323,
4.631917974,
8.766697901,
7.771365876)
)
mean(DL_PH766_percent_proliferation$DL_1pct_766)
sd(DL_PH766_percent_proliferation$DL_1pct_766)
t.test(x = scratch.m[scratch.m$BCS=="Cell Culture Medium","percent_cells"],y = DL_PH766_percent_proliferation$DL_1pct_766)
t.test(x = scratch.m[scratch.m$BCS=="G. vaginalis","percent_cells"],y = DL_PH766_percent_proliferation$DL_1pct_766)
###FIXME this should now be set up closert to qPCR given it is a time course
## Breadcrumb:
# In_Vitro_Experiments.Rdata in PreparePipeline/Prepare_EdU_Scratch.Rmd
load(file=paste0(R_script_input_directory,"In_Vitro_Experiments.Rdata"))
## Melt scratch assay data for easier handling
scratch.m<-filter(in_vitro_experiments,Experiment=="Scratch" & Observation == "Proliferation" & !grepl(x = as.character(in_vitro_experiments$Treatment),pattern = "CONTROL_")) %>% dplyr::select(-c(Experiment,Coverslip))
## Re-name the melted data
names(scratch.m)<-c("Observation","BCS","ExposureTime","percent_cells","Field")
## //////////////
### Scratch Assay
## //////////////
#Factor BCS so that order is enforced
##FIXME some of this can be moved into the prepare script!
scratch.m$BCS<-factor(scratch.m$BCS,ordered = T,levels = c("L. crispatus","L. jensenii","L. iners","G. vaginalis","Cell Culture Medium"))
scratch_sigtest.all<-data.frame(temp<-"NA")
scratch.summary.all<-data.frame(temp<-"NA")
for(et in c("8hr","13hr","16hr","19hr")){
##FIXME this is sloppy
##Ignore sig tests for now since the plots are clearly sig... too many comparisons
## Create a significance testing data frame to hold results
setup_sigtest.data<-setup_sigtest(pval_threshold = pval_threshold,raw_data = dplyr::filter(scratch.m,ExposureTime==et),test_function = "t.test",Experiment = "Scratch")
scratch_sigtest<-setup_sigtest.data$sigtest
scratch_sigtest$ExposureTime<-et
scratch.summary<-setup_sigtest.data$summary_stats
scratch.summary$ExposureTime.n<-as.numeric(gsub(et,pattern = "hr",replacement = ""))
scratch_sigtest.all<-rbind.fill(scratch_sigtest,scratch_sigtest.all)
scratch.summary.all<-rbind.fill(scratch.summary,scratch.summary.all)
}
# ggplot(scratch.summary.all)+geom_line(aes(x=ExposureTime.n,y=mean,col=BCS),show.legend = F)+
#   geom_errorbar(aes(x=ExposureTime.n,ymin=mean-sd,ymax=mean+sd),width=.3,show.legend = F)+
#   mBio+
#   ylab("Filled Scratch Area (%)")+
#   xlab("Exposure Time (hours)")+
#   theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16),axis.text.x=element_text(face="italic",angle = 45,vjust = 1,hjust = 1))+
#   scale_y_continuous(limits=c(0,102))+
#   scale_colour_manual(values=color_scheme_BCS)
###### NEW
PLOT_SCRATCH.BETA<-
ggplot(scratch.summary.all,
aes(x=ExposureTime.n,y=mean,col=BCS))+
theme_bw()+
theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16))+
geom_line(size=1.5,show.legend = F)+
geom_errorbar(aes(ymax=mean+sd,ymin=mean-sd),size=1,width=.5,show.legend = F)+
geom_point(size=6,show.legend = F)+
ylab("Filled Scratch Area (%)")+
mBio+
xlab("Exposure Time (hours)")+
scale_color_manual(values = color_scheme_BCS)+
scale_x_continuous(breaks=c(0.5,1,4,8,11,13,16,19,22),minor_breaks = NULL,limits=c(0,22.5))+
scale_y_continuous(limits=c(0,102))
######
#
#
# ## Create Barplots for scratch assay
#
# plot_scratch.prolif<-
#   ggplot(scratch.summary)+geom_bar(aes(x=as.factor(BCS),y=mean,fill=BCS,col=BCS),stat="identity",show.legend = F)+
#   geom_errorbar(aes(x=BCS,ymin=mean-sd,ymax=mean+sd),width=.3,show.legend = F)+
#   mBio+
#   ylab("Filled Scratch Area (%)")+
#   xlab("BCS")+
#   theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16),axis.text.x=element_text(face="italic",angle = 45,vjust = 1,hjust = 1))+
#   scale_fill_manual(values=color_scheme_BCS)+
#   scale_y_continuous(limits=c(0,102))+
#   scale_colour_manual(values=color_scheme_BCS)+
#   annotate("text",x=scratch_sigtest$midpoints,y=scratch_sigtest$y.sig,label=scratch_sigtest$sig,size=4)+
#   geom_segment(data=setup_sigtest.data$statbars,aes(x=x,xend=xend,y=y,yend=yend),size=1)+
#   geom_segment(data=setup_sigtest.data$statbars2,aes(x=x,xend=xend,y=y,yend=yend),size=1)
##Write plot
cairo_ps(paste0(thesis_figures_directory,FIGURE_SCRATCH_QUANT),width = 8,height = 5.5)
plot(PLOT_SCRATCH.BETA) #plot(plot_scratch.prolif)
dev.off()
## //////////////
### EdU Assay
## //////////////
##FIXME - standardize with scratch since they are basically the same plot template
## Melt EdU assay data for easier handling, clean up input
EdU.m<-filter(in_vitro_experiments,Experiment=="Scratch" & Observation == "EdU") %>% dplyr::select(-c(Experiment)) #melt(scratch)
EdU.m<-rename(EdU.m,BCS=Treatment)
#Factor BCS so that order is enforced
EdU.m$BCS<-factor(EdU.m$BCS,ordered = T,levels = c("L. crispatus","L. jensenii","L. iners","G. vaginalis","Cell Culture Medium"))
EdU.m$percent_cells<-EdU.m$percent_cells+abs(rnorm(nrow(EdU.m),1E-3,0.01))
statbars<-EdU_sigtest<-statbars2<-EdU.summary<-data.frame(temp="NA")
for(et in c("8hr","13hr","16hr","19hr")){
## Create a significance testing data frame to hold results
setup_sigtest.data<-setup_sigtest(pval_threshold = pval_threshold,raw_data = dplyr::filter(EdU.m,ExposureTime==et),test_function = "t.test",Experiment = "Scratch")
statbars<-rbind.fill(data.frame(setup_sigtest.data$statbars,ExposureTime=as.numeric(gsub(et,pattern = "hr",replacement = ""))),statbars)
statbars2<-rbind.fill(data.frame(setup_sigtest.data$statbars2,ExposureTime=as.numeric(gsub(et,pattern = "hr",replacement = ""))),statbars2)
EdU_sigtest<-rbind.fill(data.frame(setup_sigtest.data$sigtest,ExposureTime=as.numeric(gsub(et,pattern = "hr",replacement = ""))),EdU_sigtest)
EdU.summary<-rbind.fill(data.frame(setup_sigtest.data$summary_stats,ExposureTime=as.numeric(gsub(et,pattern = "hr",replacement = ""))),EdU.summary)
}
###New
PLOT_EDU.BETA<-
ggplot(EdU.summary,
aes(x=ExposureTime,y=mean,col=BCS))+
theme_bw()+
theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16))+
geom_line(size=1.5,show.legend = F)+
geom_errorbar(aes(ymax=mean+sd,ymin=mean-sd),size=1,width=.5,show.legend = F)+
geom_point(size=6,show.legend = F)+
mBio+
ylab("Epithelial Cells Positive for EdU (%)")+
xlab("Exposure Time (hours)")+
scale_color_manual(values = color_scheme_BCS)+
scale_x_continuous(breaks=c(0.5,1,4,8,11,13,16,19,22),minor_breaks = NULL,limits=c(0,22.5))+
scale_y_continuous(limits=c(0,102))
####New
#
#  ggplot(EdU.summary)+geom_line(aes(x=ExposureTime,y=mean,col=BCS), show.legend = F)+
#   geom_errorbar(aes(x=ExposureTime,ymin=mean-sd,ymax=mean+sd),show.legend = F,width=.3)+
#   mBio+
#   ylab("Epithelial Cells Positive for EdU (%)")+
#   xlab("BCS")+
#   theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16),axis.text.x=element_text(face="italic",angle = 45,vjust = 1,hjust = 1))+
#   scale_y_continuous(limits=c(0,102))#+
#   ####scale_colour_manual(values=color_scheme_BCS)+
#   ####annotate("text",x=EdU_sigtest$midpoints,y=EdU_sigtest$y.sig,label=EdU_sigtest$sig,size=4)+
#  #### geom_segment(data=statbars,aes(x=x,xend=xend,y=y,yend=yend),size=1)+
#   ####geom_segment(data=statbars2,aes(x=x,xend=xend,y=y,yend=yend),size=1)
#
## Create Barplots for EdU assay
#
# EdUPlot<-
#   ggplot(EdU.summary)+geom_bar(aes(x=factor(BCS),y=mean,fill=BCS,col=BCS),stat="identity", position="dodge",show.legend = F)+
#   geom_errorbar(aes(x=factor(BCS),ymin=mean-sd,ymax=mean+sd),position="dodge",show.legend = F,width=.3)+
#   mBio+
#   ylab("Epithelial Cells Positive for EdU (%)")+
#   xlab("BCS")+
#   theme(plot.margin=unit(c(0,0,0,0),units = "pt"), text=element_text(size=16),axis.text.x=element_text(face="italic",angle = 45,vjust = 1,hjust = 1))+
#   scale_fill_manual(values=color_scheme_BCS)+
#   scale_y_continuous(limits=c(0,102))+
#   scale_colour_manual(values=color_scheme_BCS)+
#   annotate("text",x=EdU_sigtest$midpoints,y=EdU_sigtest$y.sig,label=EdU_sigtest$sig,size=4)+
#   geom_segment(data=statbars,aes(x=x,xend=xend,y=y,yend=yend),size=1)+
#   geom_segment(data=statbars2,aes(x=x,xend=xend,y=y,yend=yend),size=1)
##Write plot
cairo_ps(paste0(thesis_figures_directory,FIGURE_EDU_QUANT),width = 8,height = 5.5)
plot(PLOT_EDU.BETA)
dev.off()
## Scratch assay data for TSB and NYC media exposed cells
control_meds<-filter(in_vitro_experiments,grepl(x = as.character(in_vitro_experiments$Treatment),pattern = "CONTROL_"))
control_meds.nyc.mean<-mean(control_meds[control_meds$Treatment=="CONTROL_NYCmed_20pct","percent_cells"])
control_meds.tsb.mean<-mean(control_meds[control_meds$Treatment=="CONTROL_TSBmed_20pct","percent_cells"])
control_meds.nyc.sd<-sd(control_meds[control_meds$Treatment=="CONTROL_NYCmed_20pct","percent_cells"])
control_meds.tsb.sd<-sd(control_meds[control_meds$Treatment=="CONTROL_TSBmed_20pct","percent_cells"])
control_meds.sig<-t.test(x=filter(control_meds,Treatment=="CONTROL_NYCmed_20pct")[,"percent_cells"],y =filter(control_meds,Treatment=="CONTROL_TSBmed_20pct")[,"percent_cells"],paired = F)
paste0("Percent cell proliferation between 20% NYC-III and TSB bacterial culture media as evaluated by scratch assay was not significant (mean +/- standard deviation NYC-III cell proliferation=",control_meds.nyc.mean,"% +/- ",control_meds.nyc.sd,"%, mean +/- standard deviation TSB  cell proliferation=,",control_meds.tsb.mean,"% +/- ",control_meds.tsb.sd,"%, p=",control_meds.sig$p.value,")")
##FIXME no longer applicable with time course ddata
## Combine proliferation sig tests and write to file
##proliferation_sigtests<-rbind(data.frame(Figure=gsub(FIGURE_SCRATCH_QUANT,replacement = "",pattern = ".eps"),scratch_sigtest),data.frame(Figure=gsub(FIGURE_EDU_QUANT,replacement = "",pattern = ".eps"),EdU_sigtest))
###proliferation_sigtests<-proliferation_sigtests[with(proliferation_sigtests, order(Figure, x,xend)),]
###proliferation_sigtests<-dplyr::select(proliferation_sigtests,Figure,xref,reference,pval,mean_diff,sig)
###proliferation_sigtests<-rbind(proliferation_sigtests,data.frame(Figure="FIGURE_S5",xref="TSB",reference="NYC",pval=control_meds.sig$p.value,mean_diff=unname(control_meds.sig$estimate[2]-control_meds.sig$estimate[1]),sig=ifelse(control_meds.sig$p.value<pval_threshold,"*","N.S.")))
PLOT_nyc_v_tsb<-ggplot(data.frame(media=c("NYC (Lactobacillus spp.)","TSB (G. vaginalis)"),scratch.mean=c(control_meds.nyc.mean,control_meds.tsb.mean),scratch.sd=c(control_meds.nyc.sd,control_meds.tsb.sd)))+
geom_bar(aes(x=media,y=scratch.mean,fill=media),stat="identity",show.legend =F)+
geom_errorbar(aes(x=media,ymax=scratch.mean+scratch.sd,ymin=scratch.mean-scratch.sd),width=.2)+
mBio+ylab("Percent Scratch Area Filled")+
xlab("VK2 Cell Culture Medium + 20% Bacterial Culture Medium")+
scale_y_continuous(limits=c(0,100))+
annotate("text",x=1.5,y=90,label="N.S.",size=4)+
geom_segment(data=data.frame(x=1,xend=2,y=87,yend=87),aes(x=x,xend=xend,y=y,yend=yend),size=1)+
geom_segment(data=data.frame(x=c(1,2),xend=c(1,2),y=c(85,85),yend=c(87,87)),aes(x=x,xend=xend,y=y,yend=yend),size=1)
cairo_ps(file=paste0(thesis_figures_directory,FIGURE_nyc_v_tsb),width = 8,height = 5.5)
PLOT_nyc_v_tsb
dev.off()
###write.csv(proliferation_sigtests,file=paste0(thesis_tables_directory,TABLE_EDU_SCRATCH_QUANT),row.names = F)
## PErcent proliferation in 1% DL lactic acid, ph buffered 7.66 expoed cells
DL_PH766_percent_proliferation<-data.frame(DL_1pct_766=c(
7.706708323,
4.631917974,
8.766697901,
7.771365876)
)
mean(DL_PH766_percent_proliferation$DL_1pct_766)
sd(DL_PH766_percent_proliferation$DL_1pct_766)
t.test(x = scratch.m[scratch.m$BCS=="Cell Culture Medium","percent_cells"],y = DL_PH766_percent_proliferation$DL_1pct_766)
t.test(x = scratch.m[scratch.m$BCS=="G. vaginalis","percent_cells"],y = DL_PH766_percent_proliferation$DL_1pct_766)
